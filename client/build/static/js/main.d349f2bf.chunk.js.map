{"version":3,"sources":["context.js/userContext.js","HomePage.js","context.js/IdeaContext.js","recurring/FormDiv.js","recurring/ListDiv.js","Navbar.js","recurring/useEdits.js","recurring/first.js","recurring/useAddDeleteGet.js","viewIdeas/IdeaPage.js","recurring/ArrayFormDiv.js","viewIdeas/SettingPage.js","viewIdeas/CharacterPage.js","viewIdeas/PlotPage.js","viewIdeas/ClimaxPage.js","viewIdeas/ConflictPage.js","recurring/useShowObject.js","forms/character/basics.js","forms/character/FinalForm.js","forms/character/Personality.js","forms/character/Physical.js","forms/character/CharacterForm.js","MainPage.js","App.js","index.js"],"names":["UserContext","React","createContext","userAxios","axios","create","UserProvider","props","useState","token","localStorage","getItem","user","JSON","parse","userInfo","setUserInfo","Provider","value","getIn","getInMethod","credentials","post","then","response","console","log","setItem","data","stringify","catch","err","alert","errMessage","logout","clear","editUser","edits","put","prev","children","interceptors","request","use","config","headers","Authorization","HomePage","username","password","setCredentials","logOrSign","setLogOrSign","useContext","handleChange","e","target","name","toggle","prompt","className","onClick","onChange","type","preventDefault","IdeaContext","IdeaProvider","idea","setIdea","ideas","setIdeas","character","setCharacter","setting","setSetting","plot","setPlot","climax","setClimax","conflict","setConflict","getAllIdeas","get","getAnIdea","ideaId","addNewIdea","newIdea","deleteAnIdea","delete","updatedIdeas","filter","_id","editAnIdea","removeSubject","id","subject","subjectId","removal","addSubject","newSubject","added","owner","newCharacter","updatedIdea","newSetting","newPlot","newClimax","newConflict","editSubject","getSubject","FormDiv","setEdits","setToggle","guide","setGuide","toggled","guideClass","hoverMessage","display","heading","guideMessage","hover","function","ListDiv","subjectList","array","map","getFunction","deleteFunction","addFunction","Navbar","to","useFunctions","edited","setEdited","flipEdits","useEffect","handleEditChange","saveArrayEdits","passedIndex","updatedArray","x","index","addToArray","newItem","removeFromArray","story","title","description","firstCharacter","quality","goals","traits","backStory","extras","fatalFlaw","firstSetting","main","smells","sights","sounds","feelings","taste","characters","when","firstPlot","conflicts","risingAction","fallingAction","resolutions","firstClimax","settings","events","firstConflict","obstacles","useAddDeleteGet","travel","setTravel","deleted","setDeleted","flipTravel","flipDeleted","remove","add","passedSubject","IdeaPage","history","useHistory","params","useParams","useEdits","push","pathname","plots","ArrayFormDiv","removeFunction","saveFunction","setAdd","handleEdits","required","SettingPage","settingId","tastes","CharacterPage","characterId","state","PlotPage","plotId","ClimaxPage","climaxId","flipfunction","ConflictPage","conflictId","useShow","start","showObject","setShowObject","toggleObject","Basics","setFunction","toggleFunction","gender","age","setTheCharacter","showNext","faker","findName","for","confirmBasics","FinalForm","setDescription","ready","setReady","basics","physical","personality","hairColor","hairTexture","hairLength","eyeColor","skinColor","weight","height","scars","tattos","peircings","finishedCharacter","genderAdject","weightAdject","heightAdject","pronouns","hairColorAdjective","hairLengthAdjective","hairTypeAdjective","eyeAdjective","skinAdjective","Personality","posPersonality","negPersonality","characterPersonality","setCharacterPersonality","help","setHelp","gridComponent","concat","choiceClass","indexOf","length","opposite","firstIndex","secondIndex","handleArray","passedInfo","chosenTraits","trait","personalityGrid","Physical","yesOrNo","setYesOrNo","scarSelection","setScarSelection","where","what","sentenceForArray","setSentenceForArray","other","setPhysical","handleArrays","handleAdd","sentence","hairColorOptions","color","checked","hairLengthOptions","hairTextureOptions","texture","eyeColorOptions","hair","complexion","eye","otherPhys","CharacterForm","editSudject","location","useLocation","travelId","setNewCharacter","changes","finish","MainPage","ideaList","App","exact","path","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d349f2bf.chunk.js","sourcesContent":["import axios from \"axios\"\nimport React, {useState} from \"react\"\n\nconst UserContext = React.createContext()\nconst userAxios = axios.create()\n\nuserAxios.interceptors.request.use(config=>{\n    const token = localStorage.getItem('token')\n    config.headers.Authorization = `Bearer ${token}`\n    return config\n})\n\nfunction UserProvider(props){\n    const [userInfo, setUserInfo] = useState(\n        {\n            token:localStorage.getItem('token')||'',\n             user:JSON.parse(localStorage.getItem('user'))||{}\n        }\n    )\n    function getIn(getInMethod, credentials){\n        axios.post(`/auth/${getInMethod}`, credentials)\n        .then(response=>{\n            console.log(response)\n            localStorage.setItem(\"token\", response.data.token)\n            localStorage.setItem(\"user\", JSON.stringify(response.data.user))\n            setUserInfo(\n            {\n                token:response.data.token, \n                user:response.data.user\n            })\n        })\n        .catch(err=>alert(err.response.data.errMessage))\n    }\n    function editUser(edits){\n        userAxios.put(`/parental/users/update/`, edits)\n        .then(response=>{\n            setUserInfo((prev)=>\n                ({...prev,\n                    user:response.data\n            }))\n        })\n    }\n    function logout(){\n        localStorage.clear()\n        setUserInfo({})\n    }\n\n \n    return(\n        <UserContext.Provider value={{...userInfo, getIn, logout, editUser}}>\n            {props.children}\n        </UserContext.Provider>\n    )\n}\n\nexport {UserProvider, UserContext}","import React, { useState, useContext } from \"react\"\nimport {UserContext} from \"./context.js/userContext\"\nfunction HomePage(){\n    const [credentials, setCredentials] = useState({username:'', password:''})\n    const [logOrSign, setLogOrSign] = useState(true)\n    const {getIn} = useContext(UserContext)\n    function handleChange(e){\n        const {name, value} = e.target\n        setCredentials(prev=>({...prev, [name]:value}))\n    }\n    function getin(e){\n        e.preventDefault()\n        if(logOrSign){\n            getIn('login', credentials)\n        }else{\n            getIn('signup', credentials)\n        }\n    }\n    function toggle(){\n        setLogOrSign(prev=>!prev)\n    }\n    const prompt = logOrSign?  'LogIn' : 'Sign Up'\n    return(\n        <div className = 'login'>\n            <div className = 'style'>\n            <h1>The Writer's Guidebook</h1>\n            <div>\n                {logOrSign ?\n                <div>\n                     <h3>New Here? Click <span onClick = {toggle}>here</span> to create a new account!</h3>\n                </div> \n                :\n                <div>\n                     <h3>Already have an account?  Click <span onClick = {toggle}>here</span> to Log in!</h3>\n                </div>\n                }\n            </div>\n            <form>\n                <label>username:</label>\n                <input\n                name = 'username'\n                value = {credentials.username}\n                onChange = {handleChange}\n                type = 'text'/>\n                <br/>\n                <label>password:</label>\n                <input\n                name = 'password'\n                value = {credentials.password}\n                onChange = {handleChange}\n                type = 'password'/>\n                <br/>\n                <button onClick = {getin}>{prompt}</button>\n            </form>\n            </div>\n        </div>\n\n    )\n}\nexport default HomePage ","import axios from \"axios\"\r\nimport React, {useState} from \"react\"\r\n \r\nconst IdeaContext = React.createContext()\r\nconst userAxios = axios.create()\r\n\r\nuserAxios.interceptors.request.use(config=>{\r\n    const token = localStorage.getItem('token')\r\n    config.headers.Authorization = `Bearer ${token}`\r\n    return config\r\n})\r\n\r\nfunction IdeaProvider(props){\r\n    const [idea, setIdea] = useState({})\r\n    const [ideas,setIdeas] = useState([])\r\n    const [character, setCharacter]= useState({})\r\n    const [setting, setSetting]= useState({})\r\n    const [plot, setPlot]= useState({})\r\n    const [climax, setClimax]= useState({})\r\n    const [conflict, setConflict]= useState({})\r\n\r\n    function addNewIdea(newIdea){\r\n        userAxios.post(`/notebook/ideas`, newIdea)\r\n        .then(response=>{\r\n            setIdea(response.data)\r\n        })\r\n        .catch(err=>alert(err.response.data.errMessage))\r\n    }\r\n    function getAllIdeas(){\r\n        userAxios.get(`/notebook/ideas/user`)\r\n        .then(response=>setIdeas(response.data))\r\n    }\r\n    function getAnIdea(ideaId){\r\n        userAxios.get(`/notebook/ideas/${ideaId}`)\r\n        .then(response=>{\r\n            setIdea(response.data)\r\n        })\r\n    }\r\n    function editAnIdea(ideaId, edits){\r\n        userAxios.put(`/notebook/ideas/${ideaId}`, edits)\r\n        .then(response=>{\r\n            setIdea(response.data)})\r\n    }\r\n    function deleteAnIdea(ideaId){\r\n        userAxios.delete(`/notebook/ideas/${ideaId}`)\r\n        .then(()=>{\r\n            const updatedIdeas = ideas.filter(idea=>idea._id !== ideaId)\r\n            setIdeas(updatedIdeas)\r\n        })\r\n    }\r\n    function getSubject(subject, subjectId){\r\n        userAxios.get(`/notebook/${subject}/${subjectId}`)\r\n        .then(response=>{\r\n            if(subject === 'characters'){\r\n                setCharacter(response.data)\r\n            }else if(subject==='settings'){\r\n                setSetting(response.data)\r\n            }else if(subject==='plots'){\r\n                setPlot(response.data)\r\n            }else if(subject==='climax'){\r\n                setClimax(response.data)\r\n            }else if(subject==='conflicts'){\r\n                setConflict(response.data)\r\n            }\r\n        })\r\n    }\r\n    function removeSubject(id, subject, subjectId, removal){\r\n        userAxios.put(`/notebook/ideas/${id}/${subjectId}/${removal}`)\r\n        userAxios.delete(`/notebook/${subject}/${subjectId}`) \r\n    }\r\n    function addSubject(ideaId, newSubject, added, subject, owner){\r\n        if(subject === 'character'|| subject === 'setting'|| subject === 'plot'){\r\n            userAxios.put(`/notebook/ideas/${ideaId}/${added}`, newSubject)\r\n            .then(response=>{\r\n                if(subject === 'character'){\r\n                    setCharacter(response.data.newCharacter)\r\n                    setIdea(response.data.updatedIdea)\r\n                }else if(subject==='setting'){\r\n                    setSetting(response.data.newSetting)\r\n                    setIdea(response.data.updatedIdea)\r\n                }else if(subject==='plot'){\r\n                    setPlot(response.data.newPlot)\r\n                    setIdea(response.data.updatedIdea)\r\n                }\r\n            })\r\n            .catch(err=>alert(err.response.data.errMessage))\r\n        }else if(subject === 'climax'|| subject === 'conflict'){\r\n        userAxios.put(`/notebook/ideas/${ideaId}/${owner._id}/${added}`, newSubject)\r\n            .then(response=>{\r\n            if(subject==='climax'){\r\n                setClimax(response.data.newClimax)\r\n            }else if(subject==='conflict'){\r\n                setConflict(response.data.newConflict)\r\n            }\r\n        })\r\n        .catch(err=>alert(err.response.data.errMessage))\r\n    }\r\n        \r\n    }\r\n    function editSubject(subject, subjectId, edits){\r\n        userAxios.put(`/notebook/${subject}/${subjectId}`, edits)\r\n        .then(response=>{\r\n            if(subject === 'characters'){\r\n                setCharacter(response.data)\r\n            }else if(subject==='settings'){\r\n                setSetting(response.data)\r\n            }else if(subject==='plots'){\r\n                setPlot(response.data)\r\n            }else if(subject==='climax'){\r\n                setClimax(response.data)\r\n            }else if(subject==='conflicts'){\r\n                setConflict(response.data)\r\n            }\r\n        })\r\n    }\r\n    return(\r\n        <IdeaContext.Provider value={{ideas, idea, character, setting, plot, climax, conflict, getAllIdeas, getAnIdea, addNewIdea, deleteAnIdea, editAnIdea, removeSubject, addSubject, editSubject, getSubject}}>\r\n            {props.children}\r\n        </IdeaContext.Provider>\r\n    )\r\n}\r\n\r\nexport {IdeaProvider, IdeaContext}","import React from \"react\"\nimport { useState } from \"react/cjs/react.development\"\nfunction FormDiv(props){\n    //tracks edits\n    const [edits, setEdits] = useState(props.edits)\n    //switches between edit form and display\n    const [toggle, setToggle] = useState(false)\n    const [guide, setGuide] = useState(false)\n    //shows display form and sets default value to info from parent element\n    function toggled(){\n        setToggle(prev=>!prev)\n        setEdits(props.edits)\n    }\n    //tracks form\n    function handleChange(e){\n        const {value} = e.target\n        setEdits(value)\n    }\n    function toggleGuide(){\n        setGuide(prev=>!prev)\n    }\n    //displays input box or text area\n    const guideClass = guide ? 'guide' : 'hidden'\n    const hoverMessage = guide ? 'click to hide the guide' : 'click for some help!'\n    if(props.display === 'textarea'){\n        return(\n            <div className = {props.name}>\n                <h1>{props.heading}</h1>\n                <p className = {guideClass}>{props.guideMessage}</p>\n                <p className = 'prompt' onClick={toggleGuide} hover = {hoverMessage}>{props.prompt} </p>\n                <div>\n                    {!toggle?\n                    <div>\n                        <p className = 'editable' hover = 'click to edit me!' onClick = {toggled}>{props.edits}</p>\n                    </div>\n                        :\n                    <form>\n                        <textarea\n                        name = {props.name}\n                        value = {edits}\n                        onChange = {handleChange}\n                        type = {props.type}/>\n                        <button onClick = {(e)=>{\n                            e.preventDefault()\n                            props.function(props.name, edits)\n                            setToggle(false)\n                            }}>Save</button>\n                    </form>\n                    }\n                </div>\n         \n                \n            </div>\n        )\n\n    }else{\n        return(\n            <div className = {props.name}>\n                <h1>{props.heading}</h1>\n                {props.guide}\n                <div className = {props.className}>\n                    {!toggle?\n                    <div>\n                        <h1 hover = 'click to edit me!' className = 'editable' onClick = {toggled}>{props.edits}</h1>\n                    </div>\n                        :\n                    <form>\n                        <input\n                        name = {props.name}\n                        value = {edits}\n                        onChange = {handleChange}\n                        type = {props.type}/>\n                        <button onClick = {()=>{\n\n                            props.function(props.name, edits)\n                            }}>Save</button>\n                    </form>\n                    }\n                </div>\n         \n                \n            </div>\n        )\n\n    }\n    \n}\nexport default FormDiv","import React from \"react\"\nfunction ListDiv(props){\n    const subjectList = props.array && props.array.map(subject=>{\n        return  (\n            <div key = {subject._id}>\n                    <h3 onClick= {()=>props.getFunction(props.subject,subject)}>{subject.name||subject.name}</h3>\n                    <p className = 'delete' onClick = {(e)=>{\n                        e.preventDefault()\n                        props.deleteFunction(props.subject, subject)}}>X</p>\n            </div>\n        )          \n    })\n    return(\n        <div className = 'listDiv'>\n            <h3 className = 'listHeading'>{props.heading}</h3>\n            <ul className = 'list'>\n                {subjectList}\n            </ul>\n            <button onClick = {()=>props.addFunction(props.subject, props.owner)}>+ Add a {props.subject}</button>\n        </div>\n    )\n}\nexport default ListDiv ","import React from \"react\"\nimport {Link} from \"react-router-dom\"\nfunction Navbar(props){\n    if(props.type.plot){\n        return(\n            <nav className = 'nav'>\n                <Link to = '/homePage'> <button>Go Home</button></Link>\n                <Link to = {`/ideaPage/${props.idea}`}> <button>Go to Idea</button></Link>\n                <Link to = {`/plot/${props.type.plot}`}> <button>Go back to plot</button></Link>\n            </nav >\n        )\n    }else{\n        return(\n            <nav >\n                <Link to = '/homePage'> <button>Go Home</button></Link>\n                <Link to = {`/ideaPage/${props.idea}`}> <button>Go to Idea</button></Link>\n            </nav>\n        )\n\n    }\n    \n\n}\nexport default Navbar","import {useState, useEffect} from 'react'\nfunction useFunctions(props){\n    //sets edits with entire character object to easily track changes\n    const [edits, setEdits] = useState({})\n    //help refresh page when array items are added or deleted\n    const [edited, setEdited] = useState(false)\n    useEffect(()=>{\n        setEdits(props)\n    }, [props])\n    function flipEdits(value){\n        if(value){\n            setEdited(true)\n        }else{\n            setEdited(false)\n        }\n   \n   \n    }\n    //sets edits when String data is edited  & 'turns on' useEffect\n    function handleEditChange(name, edits){\n        setEdits((prev)=>({...prev, [name]: edits}))\n        flipEdits(true)\n    }\n    //sets edits when items in data in an array is edited  & 'turns on' useEffect\n    function saveArrayEdits(type, passedIndex, edits){\n        setEdits(prev=>{\n            const updatedArray = prev[type].map((x, index)=>index===passedIndex? edits : x)\n            return{...prev, [type]:updatedArray}\n        })\n        setEdited(true)\n    }\n        //sets edits with items that have been added to the array & 'turns on' useEffect\n        function addToArray(type, newItem){\n            setEdits(prev=>{\n                const updatedArray = [...prev[type], newItem]\n                return{...prev, [type]:updatedArray}\n            })\n            setEdited(true)\n        }\n        //sets edits when items in goals/traits/backstory/extras array are deleted  & 'turns on' useEffect\n        function removeFromArray(type, passedIndex){\n            setEdits(prev=>{\n                const updatedArray = prev[type].filter((x, index)=>index!==passedIndex)\n                return{...prev, [type]:updatedArray}\n            })\n            setEdited(true)\n        }\n        return {edits, edited, flipEdits, handleEditChange, saveArrayEdits, addToArray, removeFromArray}\n}\n\nexport default useFunctions","const story = {\n    title:'Name Your Story', \n    description: 'Describe your idea, it can be as indepth, clear, complicated, as you need it to be. This is your story, tell me about it.(think main characters, their goals? what standins in their way? How important is the setting, You can come back to this if Your not sure yet! Maybe you want to add some characters or a plot first!)'\n}\nconst firstCharacter = {\n    name: 'What should we call this character?', \n    description: 'Describe your character! here are some thoughts to get you started...Are they tall, short, smart, funny, fluent in spanish, a wizard, how old are they, family? are they a student, do they have a job(is it saving the world).', \n    type:'Protagonist',\n    quality:'Dynamic',\n    goals:[], \n    traits:[],\n    backStory:[],\n    extras : [],\n    fatalFlaw:'To Sexy for their Shirt'\n}\nconst firstSetting = {\n    main: true,\n    name: 'Setting',\n    smells: [], \n    sights:[],\n    sounds:[],\n    feelings:[],\n    taste:[],\n    characters:[],\n    when:[],\n    extras : [],\n}\nconst firstPlot =  {\n    characters:[],\n    name: 'Dramatic Plot', \n    description: 'Give us a general Idea of your plot, You might have more details to add here as you build your climax or resolution.', \n    conflicts: [],\n    risingAction:[],\n    fallingAction:[],\n    resolutions:[],\n    extras : [],\n}\n\nconst firstClimax = {\n    conflicts:[],\n    settings:[],\n    description: 'You can give a general description of your climax or write out the whole thing! Some people find it easier to write a series of events!',\n    events: [], \n    resolutions:[], \n    extras: []\n}\nconst firstConflict = {\n    name:'Conflicting conflict',\n    description:'What is the core of this conflict? What is the problem your characters are trying to solve?',\n    type: 'Man VS Man', \n    obstacles:[], \n    extras: []\n}\n\nexport {story, firstCharacter, firstSetting, firstPlot, firstClimax, firstConflict}","import {useState, useContext} from \"react\"\nimport { firstCharacter, firstSetting, firstPlot, firstClimax, firstConflict} from \"../recurring/first\"\nimport {IdeaContext} from \"../context.js/IdeaContext\"\nfunction useAddDeleteGet(idea){\n    //sets edits with entire character object to easily track changes\n    const [travel, setTravel] = useState('')\n    const [deleted, setDeleted] = useState(false)\n    const {removeSubject, addSubject, getSubject} = useContext(IdeaContext)\n    function flipTravel(){\n        setTravel('')\n    }\n    function flipDeleted(){\n        setDeleted(false)\n    }  \n    function remove(type, subject){\n        if(type === 'character'){\n            removeSubject(idea, 'characters', subject._id, 'removeCharacter')\n        }else if(type === 'setting'){\n            removeSubject(idea, 'settings', subject._id, 'removeSetting')\n        }else if(type === 'plot'){\n            removeSubject(idea, 'plots', subject._id, 'removePlot')  \n        }else if(type === 'climax'){\n            removeSubject(idea, 'climax', subject._id, 'removeClimax')  \n        }else if(type === 'conflict'){\n            removeSubject(idea, 'conflicts', subject._id, 'removeConflict')  \n        }\n        setDeleted(true)\n    }\n    //adds a character/setting/plot  with function from context and directs user to new page\n    function add(type, owner){\n        if(type==='character'){\n            addSubject(idea, firstCharacter, 'newCharacter', type)\n            setTravel(type)\n        }else if(type === 'setting'){\n            addSubject(idea, firstSetting, 'newSetting', type)\n            setTravel(type)\n        }else if(type === 'plot'){\n            addSubject(idea, firstPlot, 'newPlot', type)\n            setTravel(type)\n        }else if(type === 'climax'){\n            addSubject(idea, firstClimax, 'newClimax', type, owner)\n            setTravel(type)\n        }else if(type === 'conflict'){\n            addSubject(idea, firstConflict, 'newConflict', type, owner)\n            setTravel(type)\n        }       \n    } \n    //gets a character/Setting/Plot with id passed from click and function from context and directs user to existing page   \n    function get(type, passedSubject){\n        if(type === 'character'){\n            getSubject('characters', passedSubject._id)\n            setTravel(type)\n        }else if(type === 'setting'){\n            getSubject('settings', passedSubject._id)\n            setTravel(type)\n        }else if(type === 'plot'){\n            getSubject('plots', passedSubject._id)\n            setTravel(type)\n        }else if(type === 'climax'){\n            getSubject('climax', passedSubject._id)\n            setTravel(type)\n        }else if(type === 'conflict'){\n            getSubject('conflicts', passedSubject._id)\n            setTravel(type)\n        }\n    }\n    return {travel, deleted, flipTravel, flipDeleted, remove, add, get}\n}\nexport default useAddDeleteGet","import React, {useContext } from \"react\"\nimport {useHistory, useParams} from \"react-router-dom\"\nimport { useEffect } from \"react/cjs/react.development\"\nimport {IdeaContext} from \"../context.js/IdeaContext\"\nimport FormDiv from \"../recurring/FormDiv\"\nimport ListDiv from \"../recurring/ListDiv\"\nimport Navbar from \"../Navbar\"\nimport useEdits from \"../recurring/useEdits\"\nimport useAddDeleteGet from \"../recurring/useAddDeleteGet\"\n\nfunction IdeaPage(){\n    const history = useHistory()\n    const params = useParams()\n     //data and functions from context and custom hooks\n     const {editAnIdea, idea, character,setting, plot, getAnIdea} = useContext(IdeaContext)\n    const { travel, deleted, flipTravel, flipDeleted, remove, add, get} = useAddDeleteGet(idea._id)\n    const {edits, edited, flipEdits, handleEditChange} = useEdits(idea)\n//refreshes page on delete and makes sure edits is still current if page is refreshed\n//     useEffect(()=>{\n//         getAnIdea(params.ideaId)\n// // eslint-disable-next-line\n//     },[])\n//pushes to a character/Setting/Plot page when one is added or clicked on.\n    useEffect(()=>{\n        if(character._id && travel === 'character'){\n            history.push({pathname: `/character/${character._id}`})\n            flipTravel()\n        }else if(setting._id && travel=== 'setting'){\n            history.push({pathname: `/setting/${setting._id}`})\n            flipTravel()\n        }else if(plot._id && travel === 'plot'){\n            history.push({pathname: `/plot/${plot._id}`})\n            flipTravel()\n        }\n// eslint-disable-next-line\n    }, [character, setting, plot])\n\n    useEffect(()=>{\n        getAnIdea(params.ideaId)\n        if(edited){\n            editAnIdea(idea._id, edits)\n            flipEdits()\n        }else if(deleted){\n            flipDeleted()\n        }\n        // eslint-disable-next-line\n    }, [edited, deleted])\n\n    if(idea._id){\n        return(\n            <div className = 'notebook ideaContainer'>\n                <Navbar idea = {idea._id} type = {idea}/>\n                <div>\n                    <FormDiv  \n                    display = 'inputbox'\n                    edits ={idea.title} \n                    name= 'title' \n                    type = 'text' \n                    function = {handleEditChange}\n                    guideMessage = \"\"\n                    prompt = {``}\n                    heading = ''\n                    />\n                    <FormDiv  \n                    display= 'textarea' \n                    edits = {idea.description} \n                    name = 'description' \n                    type = 'text' \n                    function = {handleEditChange}\n                    guideMessage = \"\"\n                    prompt = {``}\n                    heading = ''\n                    />\n                    <div className = 'idea'>\n                        <ListDiv \n                        heading = 'Characters' \n                        subject= 'character' \n                        array={idea.characters} \n                        getFunction = {get} \n                        deleteFunction = {remove} \n                        addFunction = {add}\n                        owner = {idea}\n                        /> \n                        <ListDiv \n                        heading = 'Settings' \n                        subject = 'setting' \n                        array = {idea.settings} \n                        getFunction = {get} \n                        deleteFunction = {remove} \n                        addFunction = {add}\n                        owner = {idea}\n                        />  \n                        <ListDiv \n                        heading = 'Plots' \n                        subject = 'plot' \n                        array = {idea.plots} \n                        getFunction = {get} \n                        deleteFunction = {remove} \n                        addFunction = {add}\n                        owner = {idea}\n                        />  \n                    </div>\n                </div> \n            </div>\n        )\n    }else{\n        return(\n        <div>Loading</div>\n        )\n    }\n}\nexport default IdeaPage \n","import React from \"react\"\nimport { useState } from \"react/cjs/react.development\"\nfunction ArrayFormDiv(props){\n    const {name, addFunction, prompt, guideMessage, array, removeFunction, saveFunction,heading} = props\n    //tracks edits\n    const [edits, setEdits] = useState('')\n    //gets array from parent element\n    //toggles edit display\n    const [toggle, setToggle] = useState([])\n    //tracks add form\n    const [add, setAdd] = useState('')\n    //turns on guide\n    const [guide, setGuide] = useState(false)\n    //maps over array from parent component and creates an array of true and false values.\n    useState(()=>{\n        if(array){\n            setToggle(array.map(()=>false))\n        }\n    }, [])\n    //toggles display vs edit form when clicked\n    function toggled(passedIndex){\n        const updatedArray = array.map((x, index)=> index===passedIndex ? true : false)\n        setToggle(()=>(updatedArray))   \n    }\n    //tracks edit form\n    function handleEdits(e){\n        const {value} = e.target\n        setEdits(()=>(value))\n    }  \n    //tracks add form\n    function handleAddChange(e){\n        const {value} = e.target\n        setAdd(()=>(value))\n    }\n    //turns on guide\n    function toggleGuide(){\n        setGuide(prev=>!prev)\n    }\n    const guideClass = guide ? 'guide' : 'hidden'\n    const hoverMessage = guide ? 'click to hide the guide' : 'click for some help!'\n    //displays items to be listed and delete button, if toggled is true an edit form will show\n    const subjectList = array && array.map((subject, index)=>{   \n        if(!toggle[index]){\n            return(\n                    <div key  = {index}>\n                    <h2 className = 'editable' hover = 'click to edit me!' onClick = {()=>{\n                        setEdits(()=>({[name]:subject}))\n                        toggled(index)}}>{subject}\n                    </h2>\n                    <button className = 'delete' onClick = {()=>{\n                        removeFunction([name],index)\n                        }}>X\n                    </button>\n\n                    </div>       \n                )\n        }else{\n            return(\n                <div key  = {index}>\n                    <form >\n                    <textarea\n                    id = {index}\n                    name = {name}\n                    value = {edits[name]}\n                    onChange = {handleEdits}\n                    type = 'text'\n                    />\n                    <button onClick = {()=>{\n                        saveFunction([name], index, edits)\n                        }}>Save\n                    </button>\n                    </form>\n                </div>\n            )\n        }\n    })  \n    return(\n        <div className = 'arrayDiv'>\n            <h2>{heading}</h2>\n            <p className = {guideClass}>{guideMessage}</p>\n            <p className = 'prompt' onClick={toggleGuide} hover = {hoverMessage}>{prompt} </p>\n            <div className = 'subjectList'>\n                {subjectList}\n            </div>\n            <input\n            name = {name}\n            type = 'text'\n            onChange = {handleAddChange}\n            required\n            value = {add}/>\n            <p className = 'addItem'onClick = {()=>{\n                setAdd(' ')\n                addFunction(name, add)\n                }}>Add\n            </p>\n        </div>\n    )\n    \n}\nexport default ArrayFormDiv","import React, {useEffect, useContext} from \"react\"\nimport {useParams} from \"react-router-dom\"\nimport {IdeaContext} from \"../context.js/IdeaContext\"\nimport FormDiv from \"../recurring/FormDiv\"\nimport ArrayFormDiv from \"../recurring/ArrayFormDiv\"\nimport Navbar from \"../Navbar\"\nimport useEdits from \"../recurring/useEdits\"\nfunction SettingPage(){\n    const params = useParams()\n    const {setting, getSubject, editSubject} = useContext(IdeaContext)\n    const {edits, edited, flipEdits, handleEditChange, saveArrayEdits, addToArray, removeFromArray} = useEdits(setting)\n    useEffect(()=>{\n        //gets a setting to display from url parameters\n        getSubject('settings', params.settingId)\n// eslint-disable-next-line \n    },[])\n    useEffect(()=>{\n        if(edited){\n            editSubject('settings', setting._id, edits)\n            flipEdits(false)\n        }\n    },[edits])\n\n    return(\n        <div className = 'notebook'>\n            <Navbar idea = {setting.idea} type = {setting}/>\n            <div>\n            <FormDiv \n            display = 'input' \n            edits = {setting.name} \n            name = 'name' \n            type = 'text' \n            function = {handleEditChange}\n            guideMessage = \"\"\n            prompt = {`When in ${setting.name}`}\n            heading = \"\"\n            />\n        <div className = 'main'>\n            <button  hover = {`click to swith to ${setting.main?'secondary':'main'}`} onClick={()=> {\n                if(setting.main){\n                    handleEditChange('main', false)\n                    flipEdits(true)\n                }else{\n                    handleEditChange('main', true)\n                    flipEdits(true)\n                }\n                flipEdits(true)\n            }}>{setting.main?'Main':'Secondary'}</button>\n        </div>\n        <ArrayFormDiv \n        name = 'smells'\n        array = {setting.smells}\n        saveFunction = {saveArrayEdits}\n        heading = 'Smells'\n        guideMessage = {setting.main?\"If it's near the ocean, the air might always smell like salt, a town near a factory might smell like soot, a town on the edge of the forest might smell like rain or pine.\":\"A hospital might have a medical smell, A pawn shop might smell like old newspaper and rust, grandma's house always smells like vanilla, or mothballs, depending on the grandma... \"}\n        prompt = {`${setting.name} smells like...`}\n        addFunction = {addToArray}\n        removeFunction = {removeFromArray}\n        />\n         <ArrayFormDiv \n        name = 'tastes'\n        array = {setting.tastes}\n        saveFunction = {saveArrayEdits}\n        heading = 'Tastes'\n        guideMessage = {setting.main?\"Food adds a layer of depth to your location, think the cheesesteaks of Philadelphia, or pasta of italy.\":\"depending on the location, this may not be important, but maybe your character has a favorite meal they like to eat here.\"}\n        prompt = {`${setting.name} is famous for its...`}\n        addFunction = {addToArray}\n        removeFunction = {removeFromArray}\n        />\n         <ArrayFormDiv \n        name = 'feelings'\n        array = {setting.feelings}\n        saveFunction = {saveArrayEdits}\n        heading = 'Feelings'\n        guideMessage = {\"How does this placec make you feel, a city mike make you feel claustorphobic or energized, a lake might make you reflective or nostalgic\"}\n        prompt = {`When I visit ${setting.name}, I always feel ...`}\n        addFunction = {addToArray}\n        removeFunction = {removeFromArray}\n        />\n         <ArrayFormDiv \n        name = 'sounds'\n        array = {setting.sounds}\n        saveFunction = {saveArrayEdits}\n        heading = 'sounds'\n        guideMessage = {\"An island might have the call of tropical song birds and the crashing of waves. A bar may have blaring music and shouting patrons, the low buzz of the T.V may remind you of grandma's house.\"}\n        prompt = {`${setting.name} sounds like...`}\n        addFunction = {addToArray}\n        removeFunction = {removeFromArray}\n        />\n        <ArrayFormDiv \n        name = 'sights'\n        array = {setting.sights}\n        saveFunction = {saveArrayEdits}\n        heading = 'Sights'\n        prompt = {`When you visit ${setting.name}, you'll see...`}\n        guideMessage = {setting.main?\"What would someone see while they were here? in the city someone might see skyscrapers or other arcitetural feats. In space planets, stars, moons, and meteors would probably be the backdrop, in the jungle there might be cliffs, waterfalls, and giant trees \":\"Let's get specific, is it crowded, well lit? indoors or outdoors? is there a prominent color? how about the ground, dirt? marble? tile? Will I hear heels clicking? get as detailed as you can!\"}\n        addFunction = {addToArray}\n        removeFunction = {removeFromArray}\n        />\n        <ArrayFormDiv \n        name = 'when'\n        array = {setting.when}\n        saveFunction = {saveArrayEdits}\n        heading = 'When'\n        guideMessage = {setting.main?\"Time period usually affects our story telling. Is it set in the past or future?Does the season matter? Is it decade specific? (2000 is wayyyyy different than 2010)\":\"Think about your stories timeline here? does this location appear in a flashback, or vision of the future\"}\n        prompt = {`It was around...`}\n        addFunction = {addToArray}\n        removeFunction = {removeFromArray}\n        />\n            </div>\n        </div>\n    )\n}\nexport default SettingPage ","import React, {useContext, useEffect} from \"react\"\nimport {Link, useParams} from \"react-router-dom\"\nimport {IdeaContext} from \"../context.js/IdeaContext\"\nimport FormDiv from \"../recurring/FormDiv\"\nimport ArrayFormDiv from \"../recurring/ArrayFormDiv\"\nimport Navbar from \"../Navbar\"\nimport useEdits from \"../recurring/useEdits\"\n\nfunction CharacterPage(){\n    const params = useParams()\n    //gets data and functions from contect\n    const {character, editSubject, getSubject} = useContext(IdeaContext)\n    const {edits, edited, flipEdits, handleEditChange, saveArrayEdits, addToArray, removeFromArray} = useEdits(character)\n    useEffect(()=>{\n        //gets a character to display from url parameters\n        getSubject('characters', params.characterId)\n        //edits from context\n        if(edited){\n            editSubject('characters', edits._id, edits)\n            flipEdits(false)\n        }\n// eslint-disable-next-line \n    },[edited])\n    console.log(params)\n    return(\n        <div className = 'notebook'>\n            <Navbar idea = {character.idea}type = {character}/>\n            <div className = 'character'>\n            <FormDiv \n            display = 'input' \n            edits = {character.name} \n            name = 'name' \n            type = 'text' \n            function = {handleEditChange}\n            guideMessage = \"\"\n            prompt = \"\"\n            heading = \"\"\n            />\n            <div className=\"dropdown\">\n                <button className=\"dropbtn\"> {character.name} is the {character.type}</button>\n                <div className=\"type\">\n                    <p hover = 'Your hero, think... Harry Potter, Superman, or Little Red Riding hood'onClick = {(e)=>{ e.preventDefault() \n                        handleEditChange('type', 'Protagonist')}}>Protagonist</p>\n                    <p hover = 'Your villian, think...Satan, Swiper the Fox, or The Boogieman' onClick= {()=>handleEditChange('type', 'Antagonist')}>Antagonist</p>\n                    <p  hover = \"Your hero's bff, think... Frodo, Ron weasly, or Robin from batman\" onClick= {()=>handleEditChange('type', 'Dueteragonist')}>Dueteragonist</p>\n                    <p hover =\"Extra's that you name, think...The people you can't name from the Matrix, The people you can't name from Harry potter, or The people you can't name from Mean girls... \"onClick= {()=>handleEditChange('type', 'Tertiary')}>Tertiary</p>\n                    <p hover= \"Wise sage, advice giver, secret sharer, think...Zuko's Uncle Iroh, yoda, or Dumbledor\" onClick={()=>handleEditChange('type', 'Confidante')}>Confidante</p>\n                    <p hover = 'Who you hero has a crush on, think...Mary Jane from Spiderman, Cho/Ginny from Harry Potter, Prince Charming 'onClick= {()=>handleEditChange('type', 'Love Interest')}>Love Interest</p>\n                    <p hover ='opposing views from your character, but not the antagonist, think...Draco malfoy, Squidward tentacles, or the evil step sisters' onClick= {()=>handleEditChange('type', 'Foil')}>Foil</p>\n                </div>\n            </div>\n            <div className=\"dropdown\">\n                <button className=\"dropbtn\">{character.name} is a {character.quality} character</button>\n                <div className=\"quality\">\n                    <p hover = 'a character theat evolves throughout your story, think Zuko from Last Avatar, or Neo from the matrix' onClick= {()=>handleEditChange('quality', 'Dynamic')}>Dynamic</p>\n                    <p hover = \"a charcter that does not change throughout your story, think Harry Potter's aunt and uncle\" onClick= {()=>handleEditChange('quality', 'Static')}>Static</p>\n                    <p hover = 'a cliche character that fits a mold. Think Oracles or Principals 'onClick= {()=>handleEditChange('quality', 'Stock')}>Stock</p>\n                    <p hover = 'a charcter whose very existence is a message or critique, think Aslan from the chronicles of Narnia, or Glenda the good from Oz 'onClick= {()=>handleEditChange('quality', 'Symbolic')}>Symbolic</p>\n                    <p hover = 'Dynamic, but more nuanced, The best Characters are Round!'onClick= {()=>handleEditChange('quality', 'Round')}>Round</p>\n                </div>\n            </div>\n\n            <FormDiv \n            display = 'textarea' \n            edits = {character.description} \n            name = 'description' \n            type = 'text' \n            function = {handleEditChange}\n            guideMessage = \"\"\n            prompt = {``}\n            heading = ''\n            />\n            <ArrayFormDiv \n            name = 'goals'\n            array = {character.goals}\n            saveFunction = {saveArrayEdits}\n            heading = 'Goals'\n            guideMessage = 'What are some things that motivate them? Are they always hungry? Do they need to save a family memeber from demons? do they have a crush on someone? '\n            prompt = {`${character.name} is motivated to...`}\n            addFunction = {addToArray}\n            removeFunction = {removeFromArray}\n            />\n            <ArrayFormDiv \n            name = 'traits'\n            array = {character.traits}\n            saveFunction = {saveArrayEdits}\n            heading = 'Traits'\n            guideMessage = 'What quirks makes your character special? relatable? do they pop gum? are the preppy or sulky? Do they stutter when theyre nervous? Ar they a know it all? Argumentative? talkative? quiet? meek?'\n            prompt = {`${character.name} has a habit of...`}\n            addFunction = {addToArray}\n            removeFunction = {removeFromArray}\n            />\n            <ArrayFormDiv \n            name = 'backStory'\n            array = {character.backStory}\n            saveFunction = {saveArrayEdits}\n            heading = 'Backstory'\n            guideMessage = \"What events led to the character you're writing today? Did they lose a parent at a young age? Did they get bullied in school? Were they spolied as a child? Did they get into to many fights? Was there a tragic fire in their childhood home?\"\n            prompt = {`When in ${character.name} was a kid...`}\n            addFunction = {addToArray}\n            removeFunction = {removeFromArray}\n            />\n            <FormDiv \n            display = 'textarea' \n            edits = {character.fatalFlaw} \n            name = 'fatalFlaw' \n            type = 'text' \n            function = {handleEditChange}\n            guideMessage = \"What makes your character hard to love, are they too proud?A know it all? Maybe they're Impulsive. What about this character makes it hard for them to achieve their goals.\"\n            prompt = {`THIS is going to be the death of ${character.name}...(literally?)`}\n            heading = 'Fatal Flaw'\n            />\n            <ArrayFormDiv \n            name = 'extras'\n            array = {character.extras}\n            saveFunction = {saveArrayEdits}\n            heading = 'Extras'\n            guideMessage = \"Anything Additional you'd like to add...\"\n            prompt = {`Extra, Extra`}\n            addFunction = {addToArray}\n            removeFunction = {removeFromArray}\n            />\n            </div>\n            <Link to ={{pathname: `/characterform/${character._id}`, state:character._id}}>I need more help...</Link>\n        </div>\n    )\n}\nexport default CharacterPage ","import React, {useContext, useEffect} from \"react\"\nimport {useHistory, useParams} from \"react-router-dom\"\nimport useEdits from \"../recurring/useEdits\"\nimport useAddDeleteGet from \"../recurring/useAddDeleteGet\"\nimport {IdeaContext} from \"../context.js/IdeaContext\"\nimport Navbar from \"../Navbar\"\nimport FormDiv from \"../recurring/FormDiv\"\nimport ArrayFormDiv from \"../recurring/ArrayFormDiv\"\nimport ListDiv from \"../recurring/ListDiv\"\nfunction PlotPage(){\n    const history = useHistory()\n    const params = useParams()\n    const { editSubject, getSubject, climax, conflict, plot} = useContext(IdeaContext)\n    const {travel, flipTravel, remove, add, get, deleted, flipDeleted} = useAddDeleteGet(plot.idea)\n    //data and functions from context\n    const {edits, edited, flipEdits, saveArrayEdits, addToArray, removeFromArray, handleEditChange} = useEdits(plot)\n    \n    useEffect(()=>{\n        if(deleted){\n            flipDeleted()\n            getSubject('plots', params.plotId)\n        }\n        \n// eslint-disable-next-line \n    },[deleted])\n    useEffect(()=>{\n        getSubject('plots', params.plotId)\n        if(edited){\n            editSubject('plots', plot._id, edits)\n            flipEdits(false)\n        }\n// eslint-disable-next-line\n    }, [edited])\n    useEffect(()=>{\n        if(climax._id && travel === 'climax'){\n            history.push({pathname: `/climax/${climax._id}`})\n            flipTravel()\n        }else if(conflict._id && travel=== 'conflict'){\n            history.push({pathname: `/conflict/${conflict._id}`})\n            flipTravel()\n        }\n// eslint-disable-next-line\n    }, [climax, conflict])\n    if(plot._id){\n    return(\n        <div className = 'notebook plot'>\n            <Navbar idea = {plot.idea} type = {plot}/>\n            <div className = 'plotContainer'>\n            <FormDiv  \n                display = 'inputbox'\n                edits ={plot.name} \n                name= 'name' \n                type = 'text' \n                function = {handleEditChange}\n            />\n            <FormDiv  \n                display = 'textarea'\n                edits ={plot.description} \n                name= 'description' \n                type = 'text' \n                function = {handleEditChange}\n            />\n            <ListDiv \n                heading = 'Conflicts' \n                subject= 'conflict' \n                array={plot.conflicts} \n                getFunction = {get} \n                deleteFunction = {remove} \n                addFunction = {add}\n                owner = {plot}\n            />\n            <ArrayFormDiv \n                name = 'risingAction'\n                array = {plot.risingAction}\n                saveFunction = {saveArrayEdits}\n                heading = 'Rising Action'\n                guideMessage = {\"What are the events that lead up to the climax? If your plot is about a car ride and your climax is a car accident, maybe your rising action is a series of events that distract or upset your driver.\"}\n                prompt = {`Ok, from the beginning...`}\n                addFunction = {addToArray}\n                removeFunction = {removeFromArray}\n            /> \n            <div>\n                <h2>Climax</h2>\n                <button                \n                onClick = {()=>{\n                if(plot.climax){\n                    get('climax', plot.climax)\n                }else{\n                    add('climax', plot)\n                }\n            }}>{plot.climax? plot.climax.description :'Add A Climax'}</button>\n                \n            </div>\n\n            <ArrayFormDiv \n                name = 'fallingAction'\n                array = {plot.fallingAction}\n                saveFunction = {saveArrayEdits}\n                heading = 'Falling Action'\n                guideMessage = {\"What happens after the climax? What events help everyone take a deep breath and wrap up the drama. If your plot is about a kid climbing a tree, and your climax is him almost falling right as he reaches the top. falling action might be him staring at the clouds after he reaches the top, or reflecting on his fall ont he way home.\"}\n                prompt = {`Now that we've had a chance to calm down...`}\n                addFunction = {addToArray}\n                removeFunction = {removeFromArray}\n            />   \n            <ArrayFormDiv \n                name = 'resolutions'\n                array = {plot.resolutions}\n                saveFunction = {saveArrayEdits}\n                heading = 'Resolutions'\n                guideMessage = {\"If a conflict is our problem, a resolution is our solution, sometimes this comes out in the climax, if so you can still use this space to tie up any loose ends or lingering conflicts.\"}\n                prompt = {`In order to fix this problem...`}\n                addFunction = {addToArray}\n                removeFunction = {removeFromArray}\n            />  \n            <ArrayFormDiv \n                name = 'extras'\n                array = {plot.extras}\n                saveFunction = {saveArrayEdits}\n                heading = 'Extras'\n                guideMessage = \"Anything additional you'd like to add...\"\n                prompt = {`Extra, Extra`}\n                addFunction = {addToArray}\n                removeFunction = {removeFromArray}\n            />        \n            </div>\n\n            \n        </div>\n    )\n    }else{\n        return(\n            <div>\n                Loading...\n            </div>\n        )\n    }\n}\nexport default PlotPage","import React, { useContext, useEffect } from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport useEdits from \"../recurring/useEdits\";\nimport { IdeaContext } from \"../context.js/IdeaContext\";\nimport FormDiv from \"../recurring/FormDiv\";\nimport ArrayFormDiv from \"../recurring/ArrayFormDiv\";\nimport Navbar from \"../Navbar\";\nfunction ClimaxPage() {\n    const params = useParams()\n  const { climax, getSubject, editSubject } = useContext(IdeaContext);\n  const { handleEditChange, saveArrayEdits, addToArray, removeFromArray, flipEdits, edited, edits } = useEdits(climax);\n  useEffect(()=>{\n    //gets a climax to display from url parameters\n    getSubject('climax', params.climaxId)\n    //edits from context\n    if(edited){\n        editSubject('climax', climax._id, edits)\n        flipEdits(false)\n    }\n// eslint-disable-next-line \n},[edited])\n  return (\n    <div className = 'notebook'>\n        <Navbar idea = {climax.idea} type = {climax}/>\n        <div>\n            <h1>Climax</h1>\n            <FormDiv\n                display=\"textarea\"\n                edits={climax.description}\n                name=\"description\"\n                type=\"text\"\n                function={handleEditChange}\n                guideMessage=\"\"\n                prompt=\" What had happened was\"\n                heading=\"\"\n                flipfunction = {flipEdits}\n            />\n            <ArrayFormDiv\n                name=\"events\"\n                array={climax.events}\n                saveFunction={saveArrayEdits}\n                heading=\"Events\"\n                guideMessage=\"Instead of describing or writing out your descrition, you can write a series of important events that will make up your climax! \"\n                prompt={`What had happened was...`}\n                addFunction={addToArray}\n                removeFunction={removeFromArray}\n            />\n            <ArrayFormDiv\n                name=\"resolutions\"\n                array={climax.resolutions}\n                saveFunction={saveArrayEdits}\n                heading=\"Resolutions\"\n                guideMessage= \"How is this conflict resloved, what happens that ends the conflict. This can be an abrupt end, or a gradual end.\"\n                prompt = {`Extra, Extra`}\n                addFunction={addToArray}\n                removeFunction={removeFromArray}\n            />\n            <ArrayFormDiv \n                name = 'extras'\n                array = {climax.extras}\n                saveFunction = {saveArrayEdits}\n                heading = 'Extras'\n                guideMessage = \"Anything Additional you'd like to add...\"\n                prompt = {`Extra, Extra`}\n                addFunction = {addToArray}\n                removeFunction = {removeFromArray}\n            />\n        </div>\n        \n    </div>\n  );\n}\nexport default ClimaxPage;\n","import React, { useContext, useEffect } from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport useEdits from \"../recurring/useEdits\";\nimport { IdeaContext } from \"../context.js/IdeaContext\";\nimport FormDiv from \"../recurring/FormDiv\";\nimport ArrayFormDiv from \"../recurring/ArrayFormDiv\";\nimport Navbar from \"../Navbar\";\nfunction ConflictPage() {\n    const params = useParams()\n    const { conflict, getSubject, editSubject } = useContext(IdeaContext);\n    const { handleEditChange, saveArrayEdits, addToArray, removeFromArray, flipEdits, edited, edits } = useEdits(conflict);\n  useEffect(()=>{\n    //gets a conflict to display from url parameters\n    getSubject('conflicts', params.conflictId)\n    //edits from context\n    if(edited){\n        editSubject('conflicts', conflict._id, edits)\n        flipEdits(false)\n    }\n// eslint-disable-next-line \n},[edited])\n  return (\n    <div className = 'conflict notebook'>\n        <Navbar idea = {conflict.idea} type = {conflict}/>\n        <div>\n            <FormDiv\n                display=\"input\"\n                edits={conflict.name}\n                name=\"name\"\n                type=\"text\"\n                function={handleEditChange}\n                guideMessage=\"\"\n                prompt=\"\"\n                heading=\"\"\n                flipfunction = {flipEdits}\n            />\n            <FormDiv\n                display=\"textarea\"\n                edits={conflict.description}\n                name=\"description\"\n                type=\"text\"\n                function={handleEditChange}\n                guideMessage=\"\"\n                prompt=\"\"\n                heading=\"\"\n                flipfunction = {flipEdits}\n            />\n             <div className=\"dropdown\">\n                <button className=\"dropbtn\">This conflict is {conflict.type}</button>\n                <div className=\"type\">\n                    <p hover = 'An internal struggle a charcter faces, think Fight Club or Sixth Sense' onClick= {()=>handleEditChange('type', 'Character VS Self')}>Character VS Self</p>\n                    <p hover = \"A battle between two opposing characters, think harry potter and voldemort or Cinderella and the evil step mother\" onClick= {()=>handleEditChange('type', 'Character VS Character')}>Character VS Character</p>\n                    <p hover = 'A charcter battles mother nature, think Day After Tomorrow or Journey to the Center of the Earth' onClick= {()=>handleEditChange('type', 'Character VS Nature')}>Character VS Nature</p>\n                    <p hover = \"A battle between a (mortal)Character and 'the other side', think Gothika, Twilight, or A Wrinkle in Time \"onClick= {()=>handleEditChange('type', 'Charcter VS Supernatural')}>Charcter VS Supernatural</p>\n                    <p hover = 'A battle between a character and the machines, think the matrix, Irobot, or Farenheight 451'onClick= {()=>handleEditChange('type', 'Character VS Technology')}>Character VS Technology</p>\n                    <p hover = 'A battle between a character and the rest of the world, typically anti-heros, think Venom, or Bonnie and Clyde'onClick= {()=>handleEditChange('type', 'Character VS Society')}>Character VS Society</p>\n                </div>\n            </div>\n            <ArrayFormDiv\n                name=\"obstacles\"\n                array={conflict.obstacles}\n                saveFunction={saveArrayEdits}\n                heading=\"Obstacles\"\n                guideMessage= \"What are the elements of this conflict, what gets in your charcters way nd keeps them from acheiveing their goals. \"\n                prompt = {``}\n                addFunction={addToArray}\n                removeFunction={removeFromArray}\n            />\n            <ArrayFormDiv \n                name = 'extras'\n                array = {conflict.extras}\n                saveFunction = {saveArrayEdits}\n                heading = 'Extras'\n                guideMessage = \"Anything Additional you'd like to add...\"\n                prompt = {`Extra, Extra`}\n                addFunction = {addToArray}\n                removeFunction = {removeFromArray}\n            />\n        </div>\n        \n    </div>\n  );\n}\n\nexport default ConflictPage","import { useState } from \"react/cjs/react.development\"\n\nfunction useShow(){\n    const [showObject, setShowObject] = useState({\n        start:true,\n    })\n    function toggleObject(name, value){\n        setShowObject({[name]:value})\n    }\n    return{showObject, toggleObject}\n}\nexport default useShow","import React from \"react\";\nimport { useState } from \"react/cjs/react.development\";\nimport faker from \"faker\";\nimport useShow from \"../../recurring/useShowObject\";\nfunction Basics(props) {\n  const { showObject, toggleObject } = useShow();\n  const {setFunction, toggleFunction } = props;\n  const [character, setCharacter] = useState({\n    name: \"\",\n    type: \"\",\n    gender: \"\",\n    age: 0,\n  });\n  function getRandomName(e) {\n    e.preventDefault();\n    setCharacter(prev => ({ ...prev, name: faker.name.findName() }));\n  }\n  function handleChange(e) {\n    const { name, value } = e.target;\n    setCharacter(prev => ({ ...prev, [name]: value }));\n  }\n  function setTheCharacter(type, value) {\n    setCharacter(prev => ({\n        ...prev,\n        [type]:value\n      }));\n  }\n  function showNext(type) {\n    toggleObject(type, true);\n  }\n  function nextPage() {\n    console.log('hello')\n    setFunction(\"basics\", character)\n    toggleFunction(\"physical\", true);\n  }\n  return (\n    <div>\n      <form className={showObject.start ? \"form\" : \"hidden\"}>\n        <label>\n          Let's describe uh....What should we call your character?\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={character.name}\n          onChange={handleChange}\n        />\n        <button onClick={getRandomName}>Random Name</button>\n\n        <button\n          onClick={e => {\n            e.preventDefault();\n            setTheCharacter(\"name\", character.name)\n            showNext(\"type\");\n          }}\n        >\n          next\n        </button>\n      </form>\n      <div className={showObject.type ? \"form\" : \"hidden\"}>\n        <h2>\n          That's a great Name! Which of these best describes {character.name}?\n        </h2>\n        <p onClick={() => setTheCharacter(\"type\", \"Protagonist\")}>\n          The story is all about {character.name}\n        </p>\n        <p onClick={() => setTheCharacter(\"type\", \"Tertiary Character\")}>\n          {character.name} is just a supporting character, not super important,\n          but they get along with my main character\n        </p>\n        <p onClick={() => setTheCharacter(\"type\", \"Foil\")}>\n          {character.name} is just a supporting character, not super important,\n          but they don't get along with my main character\n        </p>\n        <p onClick={() => setTheCharacter(\"type\", \"Dueteragonist\")}>\n          {character.name} is my main character's friend or family member\n        </p>\n        <p onClick={() => setTheCharacter(\"type\", \"Antagonist\")}>\n          {character.name} is my main character's enemy\n        </p>\n        <p onClick={() => setTheCharacter(\"type\", \"Confidante\")}>\n          {character.name} is my main character's teacher, coach, mentor, or\n          someone they turn to for advice\n        </p>\n        <p onClick={() => setTheCharacter(\"type\", \"Love Interest\")}>\n          {character.name} is my main character's crush or signifigant other\n        </p>\n        <p className = 'typeResult'>Ok, {character.name} is the {character.type}</p>\n        <button\n          onClick={e => {\n            e.preventDefault();\n            showNext(\"gender\");\n          }}\n        >\n          next\n        </button>\n      </div>\n      <div className={showObject.gender ? \"form\" : \"hidden\"}>\n        <h2>Awesome, what does your {character.name} identify as?</h2>\n        <p onClick={() => setTheCharacter('gender', 'male')}>Male</p>\n        <p onClick={() => setTheCharacter('gender', 'female')}>Female</p>\n        <p onClick={() => setTheCharacter('gender', 'trandgender')}>Transgender</p>\n        <p onClick={() => setTheCharacter('gender', 'gender fluid')}>Gender fluid</p>\n        <p onClick={() => setTheCharacter('gender', 'nonbinary')}>Non binary</p>\n        <label for=\"gender\">other</label>\n        <input\n          type=\"text\"\n          name=\"gender\"\n          value={character.gender}\n          onChange={handleChange}\n        />\n        <button\n          onClick={e => {\n            e.preventDefault();\n            showNext(\"age\");\n          }}\n        >\n          next\n        </button>\n      </div>\n      <div className={showObject.age ? \"form\" : \"hidden\"}>\n        <h2>You're BASICALLY done with the basics...</h2>\n        <p>\n          The only other thing I need to know now, is how old {character.name}{\" \"}\n          is.\n        </p>\n        <input\n          type=\"text\"\n          name=\"age\"\n          value={character.age}\n          onChange={handleChange}\n        />\n        <button\n          onClick={e => {\n            e.preventDefault();\n            showNext(\"confirmBasics\");\n          }}\n        >\n          next\n        </button>\n      </div>\n      <div className={showObject.confirmBasics ? \"form\" : \"hidden\"}>\n        <p>Ok, so name: {character.name} gender Identity: {character.gender} age:{character.age}</p>\n        <button onClick={nextPage}>Sounds Good! Let's move On!</button>\n        <br/>\n        Wait! I want to change the ....\n        <br/>\n        <button\n          onClick={e => {\n            e.preventDefault();\n            showNext(\"start\");\n          }}\n        >\n          name\n        </button>\n        <button\n          onClick={e => {\n            e.preventDefault();\n            showNext(\"type\");\n          }}\n        >\n          type\n        </button>\n        <button\n          onClick={e => {\n            e.preventDefault();\n            showNext(\"gender\");\n          }}\n        >\n          gender\n        </button>\n        <button\n          onClick={e => {\n            e.preventDefault();\n            showNext(\"age\");\n          }}\n        >\n          age\n        </button>\n      </div>\n    </div>\n  );\n}\nexport default Basics;\n","import React, { useContext } from \"react\"\nimport { useEffect, useState } from \"react/cjs/react.development\"\nimport useShow from \"../../recurring/useShowObject\"\nimport {IdeaContext} from \"../../context.js/IdeaContext\"\nimport { useHistory, useParams } from \"react-router\"\nfunction FinalForm(props){\n    const {editSubject} = useContext(IdeaContext)\n    const params = useParams()\n    const history = useHistory()\n    const {toggleObject} = useShow()\n    const [description, setDescription] = useState('')\n    const [ready, setReady] = useState(false)\n    const {basics, physical, personality} = props.character\n    const {gender, age, name, type} = basics\n    const {hairColor, hairTexture, hairLength, eyeColor, skinColor, weight, height, scars, tattos, peircings} = physical\n    useEffect(()=>{\n      if(ready){\n        const finishedCharacter = {\n          name: name, \n          description: description, \n          type:type,\n          quality:'Dynamic',\n          goals:[], \n          traits:[],\n          backStory:[],\n          extras : [],\n          fatalFlaw:'To Sexy for their Shirt'\n        } \n        editSubject(\"characters\", props.id, finishedCharacter)\n        setReady(false)\n        history.push({pathname: `/character/${props.id}`})\n      }\n\n    }, [ready])\n    \n    function changeDescription(type, value) {\n      console.log(\"testing\")\n        let pronouns = [];\n        let genderAdject;\n        let weightAdject;\n        let heightAdject;\n        if (gender === \"female\") {\n          pronouns = [1, \"she is\", \"her\", \"hers\"];\n        } else if (gender === \"male\") {\n          pronouns = [2, \"he is\", \"him\", \"his\"];\n        } else {\n          pronouns = [3, \"they are\", \"them\", \"theirs\"];\n        }\n        if (age < 5) {\n          genderAdject = [\"young\", \"girl\", \"boy\", \"individual\"];\n        } else if (age > 5 && age < 13) {\n          genderAdject = [\" \", \"girl\", \"boy\", \"individual\"];\n        } else if (age > 13 && age < 19) {\n          genderAdject = [\"teenage\", \"girl\", \"boy\", \"individual\"];\n        } else if (age > 19 && age < 30) {\n          genderAdject = [\"young\", \"woman\", \"man\", \"individual\"];\n        } else if (age > 30 && age < 50) {\n          genderAdject = [\"adult\", \"woman\", \"man\", \"individual\"];\n        } else if (age > 50 && age < 70) {\n          genderAdject = [\"whethered\", \"woman\", \"man\", \"individual\"];\n        } else if (age > 70) {\n          genderAdject = [\"old\", \"woman\", \"man\", \"individual\"];\n        }else{\n          genderAdject = [\"timeless\", \"woman\", \"man\", \"individual\"]\n        }\n        if(height<60){\n            heightAdject = 'short'\n        }else if (height>75){\n            heightAdject = \"tall\"\n        }\n        if(weight<120){\n          weightAdject = 'skinny'\n        }else if (weight>250){\n            weightAdject = \"heavy\"\n        }\n        let hairColorAdjective  = hairColor? hairColor : \"character\"\n        let hairLengthAdjective  = hairLength? hairLength: \"\"\n        let hairTypeAdjective  = hairTexture? `${hairTexture} hair` : \"\"\n        let eyeAdjective  = eyeColor? `${eyeColor} eyes`: \"reason\"\n        let skinAdjective  = skinColor ? `${skinColor} complexion`:\"purpose\"\n        setDescription(\n          `${name} is a ${heightAdject} ${weightAdject} ${genderAdject[0]} ${genderAdject[pronouns[0]]}. ${pronouns[1]} a ${hairColorAdjective} with a ${skinAdjective} ${hairLengthAdjective} ${hairTypeAdjective} and ${eyeAdjective}. ${name}'s family and friends describe ${pronouns[2]} as ${personality[0] + \" \" + personality[1] + \" \" + personality[2] +  \" \" + personality[3] + \" and \" + personality[4]}`\n        );\n        setReady(true)\n       \n      }\n       console.log(props, \"test\")\n    return(\n        <div>\n            <h2>Awesome do you want to change anything before we build your character?</h2>\n            <button onClick= {()=>toggleObject(\"basics\", true)}>Go back to basics</button>\n            <button onClick= {()=>toggleObject(\"physical\", true)}>Go back to Physical</button>\n            <button onClick= {()=>toggleObject(\"persona;ity\", true)}>Go back to Personality</button>\n            <button onClick = {changeDescription}>Nope I'm Ready!</button>\n        </div>\n    )\n}\nexport default FinalForm ","import React from \"react\"\nimport { useState } from \"react/cjs/react.development\"\nimport useShow from \"../../recurring/useShowObject\"\n\nfunction Personality(props){\n    const {setFunction, toggleFunction} = props\n    const character = props.character.basics.name ? props.character.basics : {}\n    const {showObject, toggleObject} = useShow()\n    const posPersonality = [\"active\",\"adaptable\", \"Brave\", \"calm\", \"creative\",\"determined\",\"friendly\", \"loyal\", \"intelligent\", \"generous\", \"honest\", \"mature\", \"patient\", \"organized\", \"funny\", \"egotistical\", \"ambitious\", \"chatty\", \"anxious\", \"extrovert\"]\n    const negPersonality = [\"lazy\", \"stubborn\", \"cowardly\", \"hyper\", \"realist\", \"forgetful\", \"abrasive\", \"disloyal\", \"dim\", \"stingy\", \"deceptive\", \"immature\", \"immpatient\", \"disorganized\", \"humorless\", \"Humble\", \"unambitious\", \"quiet\", \"relaxed\", \"introvert\"]\n    const [characterPersonality, setCharacterPersonality] = useState([])\n    const [help, setHelp] = useState('')\n    const bigArray = posPersonality.concat(negPersonality)\n    const gridComponent = bigArray.map((personality, index)=>{\n        const choiceClass = (characterPersonality.indexOf(personality)>=0? 'active':'inactive')\n        return(\n            <p className = {choiceClass} onClick = {()=>handleArray(personality)}>{personality}</p>\n        )\n        }\n    )\n    function handleArray(personality){\n        if(characterPersonality.length<5){\n            setHelp('')\n            let opposite\n            const firstIndex = posPersonality.indexOf(personality)\n            const secondIndex = negPersonality.indexOf(personality)\n            if(firstIndex>=0){\n                opposite = negPersonality[firstIndex]\n            }else if(secondIndex >= 0){\n                opposite = posPersonality[secondIndex]\n            } \n            if(characterPersonality.indexOf(opposite)>=0){\n                console.log(opposite)\n                setHelp(`this is kind of the opposite of ${opposite}, maybe you should delete that first`)\n            }else{\n                console.log(personality, firstIndex, secondIndex, opposite)\n                setCharacterPersonality(prev=>[...prev, personality])\n            }\n        }else{\n            setHelp(`Let's start with five for now, you can always add more on your own later!`)\n        }\n    }\n    function removeFromArray(passedInfo){\n        setCharacterPersonality(prev=>{\n           const updatedArray = characterPersonality.filter(personality=>personality !==passedInfo)\n           return updatedArray\n        })\n    }\n    const chosenTraits = characterPersonality.map(trait=>\n        <li onClick = {removeFromArray}>{trait}</li>\n    )\n\n    function showNext(type){\n        toggleObject(type, true)\n    }\n    function nextPage(){\n        setFunction(\"personality\",characterPersonality)\n        toggleFunction(\"finish\", true)\n    }\n    return(\n        <div>\n            <h1>This part is easy...</h1>\n            <h2>Let's give {character.name} some personality...</h2>\n            <button onClick = {(e)=>{\n                    e.preventDefault()\n                    showNext(\"personalityGrid\")}}>\n                        next\n            </button> \n            <div className = {showObject.personalityGrid? 'personalityGrid': 'hidden'}>\n                <p>Choose up to five personality traits for {character.name}</p>\n                <div className = 'grid'>\n                    {gridComponent}\n                </div>\n            </div>\n            <div className = 'personalityResults'> {character.name} is \n            <ol>{chosenTraits}</ol>\n             <p>{help}</p></div>\n            <button onClick = {nextPage}>Next!</button>\n\n        </div>\n    )\n}\nexport default Personality  ","import React from \"react\"\nimport {useState } from \"react/cjs/react.development\"\nimport useShow from \"../../recurring/useShowObject\"\nfunction Physical(props){\n    const {setFunction, toggleFunction} = props\n    const character = props.character.basics.name ? props.character.basics : {}\n    const {showObject, toggleObject} = useShow()\n    const [yesOrNo, setYesOrNo] = useState(false)\n    const hairColor = [\"red head\", \"blonde\", \"brunette\", \"black\" ]\n    const hairLength = [\"short\", \"medium\", \"long\"]\n    const [scarSelection, setScarSelection] = useState(\"\")\n    const hairTexture = [\"curly\", \"straight\", \"frizzy\", \"bushy\", \"wavy\", \"kinky\"]\n    const skinColor = [\"light\", \"dark \", \"fair\", \"medium\", \"brown\"]\n    const eyeColor = [\"blue\", \"green\", \"hazel\", \"brown\", \"black\", \"gold\"]\n    const [sentenceForArray, setSentenceForArray] = useState({where:'', what:''})\n    const [physical, setPhysical] = useState(\n        {\n            hairColor: false,\n            hairTexture: false,\n            hairLength:false,\n            eyeColor: false,\n            skinColor: false,\n            weight: false,\n            height: false,\n            scars: false,\n            tattos:[],\n            peircings : [],\n            other:[]\n        })\n        \n        function showNext(type){\n            toggleObject(type, true)\n            setYesOrNo(false)\n        }\n        function handleChange(e){\n            const {name, value} = e.target\n            setPhysical(prev=>({...prev, [name]:value}))\n        }\n        function handleArrays(e){\n            const{name, value} = e.target\n            setSentenceForArray(prev=>({[name]: value}))\n        }\n        function handleAdd(name){\n            const sentence = `${character.name} has a  ${sentenceForArray.what} on their ${sentenceForArray.where}`\n            setPhysical(prev=>({...prev, [name]: sentence}))\n            setSentenceForArray({where:'', what:''})\n        }\n        function nextPage(){\n            setFunction(\"physical\", physical)\n            toggleFunction(\"personality\", true)\n        }\n            const hairColorOptions = hairColor.map(color=>\n            <div>\n                <p>{color}</p>\n                <input\n                    name = \"hairColor\"\n                    type = \"radio\"\n                    onChange = {handleChange}\n                    value = {color}\n                    checked = {physical.hairColor === color}\n                />\n            </div>\n        )\n        const hairLengthOptions = hairLength.map(length=>\n            <div>\n                <p>{length}</p>\n                <input\n                    name = \"hairLength\"\n                    type = \"radio\"\n                    onChange = {handleChange}\n                    value = {length}\n                    checked = {physical.hairLength === length}\n                />\n            </div>\n        )\n        const hairTextureOptions = hairTexture.map(texture=>\n            <div>\n                <p>{texture}</p>\n                <input\n                    name = \"hairTexture\"\n                    type = \"radio\"\n                    onChange = {handleChange}\n                    value = {texture}\n                    checked = {physical.hairTexture === texture}\n                />\n            </div>\n        )\n        const skinColorOptions = skinColor.map(color=>\n            <div>\n                <p>{color}</p>\n                <input\n                    name = \"skinColor\"\n                    type = \"radio\"\n                    onChange = {handleChange}\n                    value = {color}\n                    checked = {physical.skinColor === color}\n                />\n            </div>\n        )\n        const eyeColorOptions = eyeColor.map(color=>\n            <div>\n                <p>{color}</p>\n                <input\n                    name = \"eyeColor\"\n                    type = \"radio\"\n                    onChange = {handleChange}\n                    value = {color}\n                    checked = {physical.eyeColor === color}\n                />\n            </div>\n        )\n    return(\n        <div>\n            <div className = {showObject.start ? 'start' : 'hidden'}>\n                <h2>Let's firgure out what {character.name} looks like...</h2>\n                <button onClick = {(e)=>{\n                    e.preventDefault()\n                    showNext(\"hair\")}}>\n                        next\n                </button> \n            </div>\n            <div className = {showObject.hair? 'hair' : 'hidden'}>\n                <p>{character.name}'s hair important to them? It might be if your character is of a certain nationality, or if it's central to the plot, think Rapunzel or even Brave</p>\n                <button onClick = {()=>setYesOrNo(true)}>Yes</button>\n                <button onClick = {()=>setYesOrNo(false)}>No</button>\n                <div className = {yesOrNo ? 'options' : 'hidden'}>\n                    <label for = \"hairColor\">What's the color?</label>\n                    <div>\n                       {hairColorOptions} \n                    </div>\n                    \n                    <p>something special</p>\n                    <input\n                        name = \"hairColor\"\n                        type = \"text\"\n                        onChange = {handleChange}\n                        value = {physical.hairColor}\n                    />\n                    <label for = \"hairColor\">What's the length?</label>\n                    <div>\n                        {hairLengthOptions}\n                    </div>\n                    \n                    <p>something special</p>\n                    <input\n                        name = \"hairColor\"\n                        type = \"text\"\n                        onChange = {handleChange}\n                        value = {physical.hairColor}\n                    />\n                    <label for = \"hairTexture\">What's the texture?</label>\n                    <div>\n                        {hairTextureOptions}\n                    </div>\n                    \n                    <p>something special</p>\n                    <input\n                        name = \"hairTexture\"\n                        type = \"text\"\n                        onChange = {handleChange}\n                        value = {physical.hairTexture}\n                    /> \n                </div>\n                <button onClick = {(e)=>{\n                    e.preventDefault()\n                    showNext(\"complexion\")}}>\n                        next\n                </button>\n            </div>\n            <div className = {showObject.complexion? 'complexion' : 'hidden'}>\n                <p>{character.name}'s complexion important to the plot? If they're an alien, or you're story is about race this might matter! </p>\n                <button onClick = {()=>setYesOrNo(true)}>Yes</button>\n                <button onClick = {()=>setYesOrNo(false)}>No</button>\n                <div className = {yesOrNo ? 'options' : 'hidden'}>\n                <div>\n                         \n                </div>\n                    \n                    <p>something special</p>\n                    <input\n                        name = \"skinColor\"\n                        type = \"text\"\n                        onChange = {handleChange}\n                        value = {physical.skinColor}\n                    />\n                </div>\n                <button onClick = {(e)=>{\n                    e.preventDefault()\n                    showNext(\"eye\")}}>\n                        next\n                </button>\n            </div>\n            <div className = {showObject.eye? 'eye' : 'hidden'}>\n                <p>{character.name}'s eye color important to the plot? Supernatural characters might have eye they need to hide, or maybe your character has their mother's eyes like Harry Potter </p>\n                <button onClick = {()=>setYesOrNo(true)}>Yes</button>\n                <button onClick = {()=>setYesOrNo(false)}>No</button>\n                <div className = {yesOrNo ? 'options' : 'hidden'}>\n                    <div>\n                        {eyeColorOptions}\n                    </div>\n                    \n                    <p>something special</p>\n                    <input\n                        name = \"eyeColor\"\n                        type = \"text\"\n                        onChange = {handleChange}\n                        value = {physical.eyeColor}\n                    />\n                </div>\n                <button onClick = {(e)=>{\n                    e.preventDefault()\n                    showNext(\"weight\")}}>\n                        next\n                </button>\n            </div>\n            <div className = {showObject.weight? 'weight' : 'hidden'}>\n                <p>{character.name}'s weight important to the plot? </p>\n                <button onClick = {()=>setYesOrNo(true)}>Yes</button>\n                <button onClick = {()=>setYesOrNo(false)}>No</button>\n                <div className = {yesOrNo ? 'options' : 'hidden'}>\n                <p>How much does {character.name} weigh?</p>\n                    <input\n                        name = \"weight\"\n                        type = \"number\"\n                        onChange = {handleChange}\n                        value = {physical.weight}\n                    />lbs\n                </div>\n                <button onClick = {(e)=>{\n                    e.preventDefault()\n                    showNext(\"height\")}}>\n                        next\n                </button>\n            </div>\n            <div className = {showObject.height? 'height' : 'hidden'}>\n                <p>{character.name}'s height important to the plot? </p>\n                <button onClick = {()=>setYesOrNo(true)}>Yes</button>\n                <button onClick = {()=>setYesOrNo(false)}>No</button>\n                <div className = {yesOrNo ? 'options' : 'hidden'}>\n                    <p>How tall is {character.name}</p>\n                    <input\n                        name = \"height\"\n                        type = \"number\"\n                        onChange = {handleChange}\n                        value = {physical.height}\n                    />inches\n                </div>\n                <button onClick = {(e)=>{\n                    e.preventDefault()\n                    showNext(\"scars\")}}>\n                        next\n                </button>\n            </div>\n            <div className = {showObject.scars? 'scars' : 'hidden'}>\n                <p>Does {character.name} have any important scars, peircings, or tattos? </p>\n                <button onClick = {()=>setYesOrNo(true)}>Yes</button>\n                <button onClick = {()=>setYesOrNo(false)}>No</button>\n                <div className = {yesOrNo ? 'options' : 'hidden'}>\n                    <button onClick = {()=>setScarSelection('scars')}>Add Scars</button>\n                    <button onClick = {()=>setScarSelection('tattoos')}>Add Tattoos</button>\n                    <button onClick = {()=>setScarSelection('peircings')}>Add Peircings</button>\n                    <div className = {scarSelection ==='scars' ? 'options' : 'hidden'}>\n                        <p>{character.name} has a</p>\n                        <label for = \"whatScar\">decribe the scar</label>\n                        <input\n                            id = \"whatScar\" \n                            name = \"what\"\n                            type = \"text\"\n                            onChange = {handleArrays}\n                            value = {sentenceForArray.what}\n                        />\n                        <p>on their...</p>\n                        <label for = \"whereScar\">where is it?</label>\n                        <input\n                            id = \"whereScar\"\n                            name = \"where\"\n                            type = \"text\"\n                            onChange = {handleArrays}\n                            value = {sentenceForArray.where}\n                        />\n                        <button onClick = {()=>handleAdd(\"scars\")}>add</button>\n                    </div>\n                    <div className = {scarSelection ==='tattoos' ? 'options' : 'hidden'}>\n                        <p>{character.name} has a tatto of</p>\n                        <label for = \"whatTatto\">describe the tatto</label>\n                        <input\n                            id = \"whatTatto\"\n                            name = \"what\"\n                            type = \"text\"\n                            onChange = {handleArrays}\n                            value = {sentenceForArray.what}\n                        />\n                        <p>On their</p>\n                        <label for = \"whereTatto\">where is it?</label>\n                        <input\n                            id = \"whereTatto\"\n                            name = \"where\"\n                            type = \"text\"\n                            onChange = {handleArrays}\n                            value = {sentenceForArray.where}\n                        />\n                        <button onClick = {()=>handleAdd(\"tattos\")}>add</button>\n                    </div>\n                    <div className = {scarSelection ==='peircings' ? 'options' : 'hidden'}>\n                        <p>{character.name} has a</p>\n                        <label for = \"whatPeircing\">describe the peircing</label>\n                        <input\n                            id = \"whatPeircing\"\n                            name = \"peircings\"\n                            type = \"text\"\n                            onChange = {handleChange}\n                            value = {sentenceForArray.what}\n                        />\n                        <p>peircing in their</p>\n                        <label for = \"wherePeircing\">where is it?</label>\n                        <input\n                            id = \"wherePeircing\"\n                            name = \"peircings\"\n                            type = \"text\"\n                            onChange = {handleChange}\n                            value = {sentenceForArray.where}\n                        />\n                        <button onClick = {()=>handleAdd(\"peircings\")}>add</button>\n                    </div>\n                </div>\n                <button onClick = {(e)=>{\n                    e.preventDefault()\n                    showNext(\"otherPhys\")}}>\n                        next\n                </button>\n            </div>\n            <div className = {showObject.otherPhys? 'otherPhys' : 'hidden'}>\n                <p>Anything else we should know about {character.name}'s physical appearance? </p>\n                <button onClick = {()=>setYesOrNo(true)}>Yes</button>\n                <button onClick = {()=>setYesOrNo(false)}>No</button>\n                <div className = {yesOrNo ? 'options' : 'hidden'}>\n                    <p> Don't forget {character.name} has...</p>\n                        <input\n                            name = \"other\"\n                            type = \"text\"\n                            onChange = {handleChange}\n                            value = {physical.other}\n                        />\n                </div>\n                    <button\n                        onClick={e => {\n                            e.preventDefault();\n                            showNext(\"confirmBasics\");\n                        }}\n                        >\n                        next\n                    </button>\n                </div>\n                <div className={showObject.confirmBasics ? \"form\" : \"hidden\"}>\n                    <p>Ok, so \n                        <li>hair-color: {physical.hairColor?physical.hairColor: 'not important'}</li>\n                        <li>length:{physical.hairLength?physical.hairLength: 'not important'}  </li>\n                        <li>Texture: {physical.hairTexture?physical.hairTexture: 'not important'} </li>\n                        <li>eyes:{physical.eyeColor?physical.eyeColor: 'not important'}  </li>\n                        <li>skin: {physical.skinColor?physical.skinColor: 'not important'}</li>\n                        <li>weight: {physical.weight?physical.weight: 'not important'}</li>\n                        <li>height: {physical.height?physical.height: 'not important'}</li>\n                        </p>\n                    <button onClick={nextPage}>Sounds Good! Let's move On!</button>\n                    <br/>\n                    Wait! I want to change the ....\n                    <br/>\n                    <button\n                    onClick={e => {\n                        e.preventDefault();\n                        showNext(\"hair\");\n                    }}\n                    >\n                    hair\n                    </button>\n                    <button\n                    onClick={e => {\n                        e.preventDefault();\n                        showNext(\"eye\");\n                    }}\n                    >\n                    eyes\n                    </button>\n                    <button\n                    onClick={e => {\n                        e.preventDefault();\n                        showNext(\"complextion\");\n                    }}\n                    >\n                    complextion\n                    </button>\n                    <button\n                    onClick={e => {\n                        e.preventDefault();\n                        showNext(\"weight\");\n                    }}\n                    >\n                    weight\n                    </button>\n                    <button\n                    onClick={e => {\n                        e.preventDefault();\n                        showNext(\"height\");\n                    }}\n                    >\n                    height\n                    </button>\n                    <button\n                    onClick={e => {\n                        e.preventDefault();\n                        showNext(\"scars\");\n                    }}\n                    >\n                    scars\n                    </button>\n                </div> \n            </div>\n    )\n}\nexport default Physical     ","import React from \"react\"\nimport { Link, useLocation, useParams } from \"react-router-dom\"\nimport {useState } from \"react/cjs/react.development\"\nimport { IdeaContext } from \"../../context.js/IdeaContext\"\nimport Basics from \"./basics\"\nimport FinalForm from \"./FinalForm\"\nimport Personality from \"./Personality\"\nimport Physical from \"./Physical\"\nimport useShow from \"../../recurring/useShowObject\"\nfunction CharacterForm(props){\n    const {editSudject} = IdeaContext\n    const params = useParams()\n    const {showObject, toggleObject} = useShow()\n    const location = useLocation()\n    const travelId = location.character && location.character._id\n    const [newCharacter, setNewCharacter] = useState(\n        {basics:{}, physical:{}, personality:[]\n        }\n    )\n    // const characterDescription = `${newCharacter.name} is a `\n    function setCharacter(name, changes){\n        setNewCharacter(prev=>({...prev, [name]:changes}))\n    }\n    console.log(params, location.state)\n    if(showObject){\n    return(\n        <div>\n            <div className = {showObject.start? 'welcome': 'hidden'}>\n                <h1>Welcome to build-a-char!</h1>\n                <p>We'll ask some questions to get those creative juices flowing, and start your new character for you!</p>\n                <p>When ever you're ready click <span>continue</span> to start or <span>back</span> to return to your character page...</p>\n                <button onClick= {()=>toggleObject(\"basics\", true)}>Continue...</button>\n                <Link to = {`/character/${travelId}`}> <button>Back</button></Link>\n            </div>\n            <div className = {showObject.basics ? 'basics' : 'hidden'}>\n                <Basics setFunction = {setCharacter} toggleFunction = {toggleObject}/>\n            </div>\n            <div className = {showObject.physical ? 'physical' : 'hidden'}>\n                <Physical setFunction = {setCharacter} character = {newCharacter} toggleFunction = {toggleObject}/>\n            </div>\n            <div className = {showObject.personality ? 'personality' : 'hidden'}>\n                <Personality setFunction = {setCharacter} character = {newCharacter} toggleFunction = {toggleObject}/>\n            </div>\n            <div className = {showObject.finish ? 'finish' : 'hidden'}>\n                <FinalForm setFunction = {setCharacter} character = {newCharacter} toggleFunction = {toggleObject} id = {location.state}/>\n            </div>\n        \n\n        </div>\n        \n    )\n    }else{\n        return(\n            <div>\n                Loading...\n            </div>\n        )\n    }\n}\n\nexport default CharacterForm ","import React, {useContext} from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport {UserContext} from \"./context.js/userContext\"\nimport {IdeaContext} from \"./context.js/IdeaContext\"\nimport { useEffect, useState } from \"react/cjs/react.development\"\nimport {story} from \"./recurring/first\"\n//import IdeaContext from \"./context.js/ideaContext\"\n\nfunction MainPage(){\n    const history = useHistory()\n    //gets data and functions from context\n    const {user, logout} = useContext(UserContext)\n    const {idea, ideas, getAllIdeas, getAnIdea, addNewIdea, deleteAnIdea} = useContext(IdeaContext)\n    //allows us to travel to the next page\n    const [travel, setTravel]= useState(false)\n//gets users previous ideas to display\n    useEffect(()=>{\n        getAllIdeas()\n    // eslint-disable-next-line\n    },[])\n    //pushes the user to a new/existing idea page everytime they click a different idea\n    useEffect(()=>{\n        if(idea._id && travel){\n            history.push(`/ideaPage/${idea._id}`)\n            setTravel(false)\n        }\n// eslint-disable-next-line\n    }, [idea])\n// uses function from context and 'story model' to creat a new story and push the user to that new story page\n    function addNewStory(){\n            addNewIdea(story)\n            setTravel(true)\n    }\n// uses function from context and ideaId from clickEvent to push the user to that existing story page\n    function getStory(passedIdea){\n        getAnIdea(passedIdea._id)\n        setTravel(true)\n    }\n//maps over the iea list and displays a link to get a new story and a button to delete delete a story\n    const ideaList = ideas.map(idea=>{\n        return  (\n              <div key = {idea._id}>\n                    <h3 onClick= {()=>getStory(idea)}>{idea.title}</h3>\n                    <p className = 'delete' onClick = {()=>deleteAnIdea(idea._id)}>X</p>\n              </div>\n          )          \n  })\n    return(\n        <div className = 'notebook homepage'>\n            <div>\n            <h1>Written By: {user.username}</h1>\n            <button className = 'logout' onClick = {logout}>logout</button>\n            <p className = 'new' onClick = {addNewStory}> + Add a new Story Idea </p>\n            <p>Or View a Work In Progress</p>\n            <ul className ='wips'>\n                {ideaList}\n            </ul>\n            </div>\n            \n        </div>\n\n    )\n}\nexport default MainPage","import React, {useContext} from \"react\"\nimport {Switch, Route, Redirect} from \"react-router-dom\"\nimport HomePage from \"./HomePage\"\nimport IdeaPage from \"./viewIdeas/IdeaPage\"\nimport SettingPage from \"./viewIdeas/SettingPage\"\nimport {UserContext} from \"./context.js/userContext\"\nimport CharacterPage from \"./viewIdeas/CharacterPage\"\nimport PlotPage from \"./viewIdeas/PlotPage\"\nimport ClimaxPage from \"./viewIdeas/ClimaxPage\"\nimport ConflictPage from \"./viewIdeas/ConflictPage\"\nimport CharacterForm from \"./forms/character/CharacterForm\"\nimport MainPage from \"./MainPage\"\n\nfunction App(){\n    const {token} = useContext(UserContext)\n    return(\n        <div>\n            <Switch>\n                <Route exact path = \"/\">{token? <Redirect to = \"/homepage\"/>:<HomePage/>}</Route> \n                <Route path = \"/homepage\">{!token? <Redirect to = \"/\"/>:<MainPage/>}</Route>\n                <Route path = \"/ideaPage/:ideaId\"><IdeaPage/></Route>\n                <Route path = '/character/:characterId'><CharacterPage/></Route>\n                <Route path = \"/setting/:settingId\"><SettingPage/></Route>    \n                <Route path = \"/plot/:plotId\"><PlotPage/></Route>  \n                <Route path = \"/climax/:climaxId\"><ClimaxPage/></Route>   \n                <Route path = \"/conflict/:conflictId\"><ConflictPage/></Route> \n                <Route path = \"/characterform/\"><CharacterForm/></Route>     \n            </Switch>   \n\n        </div>\n    )\n}\nexport default App ","import React from \"react\"\nimport ReactDom from \"react-dom\"\nimport App from \"./App\"\nimport {UserProvider} from \"./context.js/userContext\"\nimport {IdeaProvider} from \"./context.js/IdeaContext\"\nimport {BrowserRouter as Router} from \"react-router-dom\"\nimport \"./style.css\"\nimport \"./formstyle.css\"\n\nReactDom.render(\n<Router>\n    <IdeaProvider>\n    <UserProvider>\n        <App/>\n    </UserProvider>\n    </IdeaProvider>\n</Router>,\n \ndocument.getElementById('root'))"],"sourceRoot":""}